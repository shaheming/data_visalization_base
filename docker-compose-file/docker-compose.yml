version: '3'

volumes:
  store:
    driver: local
  bundle:
    driver: local
services:
  mysql:
    image: mysql:5.6.34
    restart: always
    ports:
      - 3388:3306
    restart: always
    volumes:
      - ./mysql_data:/var/lib/mysql/
      - ./rails_docker/docker-compose-file/minimal.cnf:/etc/mysql/conf.d/minimal.cnf:ro
    environment:
      MYSQL_USER: sand
      MYSQL_PASSWORD: sand
      MYSQL_ROOT_PASSWORD: root
      LANG: C.UTF-8
    networks:
      - default

  redis:
    image: redis
    restart: always
    networks:
      - default
    environment:
      LANG: C.UTF-8

  web:
    build:
      context: ./rails_docker
      args:
        WORKING_PATH: /root/app
    ports:
      - 3111:3000
    depends_on:
      - mysql
      - redis
    volumes:
      - ./rails_docker:/root/app
      - bundle:/usr/local/bundle
    networks:
      - default
    environment: &app_env
      RAILS_ENV: ${RAILS_ENV} #set environment
      PORT: 3000
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: root
      DB_PSWD: root
      DB_NAME: my_server_dev
      DB_PD_NAME: my_server
      DB_TS_NAME: my_server_test
      DB_ADAPTER: mysql2
      DB_ENCODING: utf8mb4
      SERVER_HOST: 0.0.0.0
      REDIS_HOST: "redis:6379"
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      LANG: C.UTF-8
    command: ["/root/app/bin/setup"]
    stdin_open: true
    tty: true

  nginx:
    image: nginx
    restart: always
    networks:
      - default
    volumes:
      - ./rails_docker/docker-compose-file:/docker-compose-file
      - ./rails_docker:/root/app
    ports:
      - "${SERVER_PORT}:80"
    environment:
      APP_LOCAL_PORT: 3000
      APP_SERVER: web
      MY_SERVER_NAME: ${SERVER_IP}
      LANG: C.UTF-8
    depends_on:
      - web
    command: ["./docker-compose-file/nginx_start.sh"]
networks:
  default:

