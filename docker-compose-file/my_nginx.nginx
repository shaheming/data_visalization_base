upstream puma {
    server server_port;
}

server {
    # define your domain
    server_name my_server_name; #set you domain or server ip

    # define the public application root
    root   /root/app/public/;
    #当响应请求的 location 区块中，没有自己的 root 指令，上述的 root 指令才会被使用。
    #index  index.html;

    # define where Nginx should write its logs
    access_log /root/app/log/nginx.access.log;
    error_log /root/app/log/nginx.error.log;

    # deny requests for files that should never be accessed
    location /visaulize {
        root /root/app/public/web_publish;
    }


    location ~ /\. {
        deny all;
    }

    location ~* ^.+\.(rb|log)$ {
        deny all;
    }

    # serve static (compiled) assets directly if they exist (for rails production)
#    location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/ {
#        try_files $uri @rails;
#
#        access_log off;
#        gzip_static on; # to serve pre-gzipped version
#
#        expires max;
#        add_header Cache-Control public;
#
#        # Some browsers still send conditional-GET requests if there's a
#        # Last-Modified header or an ETag header even if they haven't
#        # reached the expiry date sent in the Expires header.
#        add_header Last-Modified "";
#        add_header ETag "";
#        break;
#    }

    location ^~ /assets/ {
        gzip_static on;
        expires max;
        add_header Cache-Control public;
    }

    # send non-static file requests to the app server
    #  try_files $uri @rails;
    # 1. try $uri static
    # 2. try @rails
    location / {
        try_files $uri @rails;
    }

    location @rails {
        proxy_set_header  X-Real-IP  $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://puma; #note this puma equal to upstream puam in the head
    }

#    location /fact {
#        proxy_pass   http://127.0.0.1:10086/fact;
#    }
#   you can use it the send some service to other services
}